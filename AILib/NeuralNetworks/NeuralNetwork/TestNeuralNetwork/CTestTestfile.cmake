# CMake generated Testfile for 
# Source directory: /home/daniel/Hypercomplete/Projects/Projects/AILib/NeuralNetworks/NeuralNetwork/TestNeuralNetwork
# Build directory: /home/daniel/Hypercomplete/Projects/Projects/AILib/NeuralNetworks/NeuralNetwork/TestNeuralNetwork
# 
# This file includes the relevent testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
ADD_TEST(N32_Ostream "test_neural_network" "--N32_Ostream")
ADD_TEST(N32_CheckDim "test_neural_network" "--N32_CheckDim")
ADD_TEST(N32_Constructor1 "test_neural_network" "--N32_Constructor1")
ADD_TEST(N32_Constructor2 "test_neural_network" "--N32_Constructor2")
ADD_TEST(N32_Constructor3 "test_neural_network" "--N32_Constructor3")
ADD_TEST(N32_GetRows "test_neural_network" "--N32_GetRows")
ADD_TEST(N32_GetColumns "test_neural_network" "--N32_GetColumns")
ADD_TEST(N32_SetNext "test_neural_network" "--N32_SetNext")
ADD_TEST(N32_SetPrevious "test_neural_network" "--N32_SetPrevious")
ADD_TEST(N32_SetLearningRate "test_neural_network" "--N32_SetLearningRate")
ADD_TEST(N32_PutNeural "test_neural_network" "--N32_PutNeural")
ADD_TEST(N32_Propagate1 "test_neural_network" "--N32_Propagate1")
ADD_TEST(N32_Propagate2 "test_neural_network" "--N32_Propagate2")
ADD_TEST(N32_BackPropagate1 "test_neural_network" "--N32_BackPropagate1")
ADD_TEST(N32_BackPropagate2 "test_neural_network" "--N32_BackPropagate2")
ADD_TEST(NMS_Ostream "test_neural_network" "--NMS_Ostream")
ADD_TEST(NMS_Constructor1 "test_neural_network" "--NMS_Constructor1")
ADD_TEST(NMS_Constructor2 "test_neural_network" "--NMS_Constructor2")
ADD_TEST(NMS_PutNeural "test_neural_network" "--NMS_PutNeural")
ADD_TEST(NMS_GetNeural "test_neural_network" "--NMS_GetNeural")
ADD_TEST(NMS_SetLearningRate1 "test_neural_network" "--NMS_SetLearningRate1")
ADD_TEST(NMS_SetLearningRate2 "test_neural_network" "--NMS_SetLearningRate2")
ADD_TEST(NMS_Error "test_neural_network" "--NMS_Error")
ADD_TEST(NMS_Propagate "test_neural_network" "--NMS_Propagate")
ADD_TEST(NMS_BackPropagate "test_neural_network" "--NMS_BackPropagate")
ADD_TEST(N32_Learning "test_neural_network" "--N32_Learning")
ADD_TEST(N32_Learning2 "test_neural_network" "--N32_Learning2")
ADD_TEST(NMS_Learning "test_neural_network" "--NMS_Learning")
ADD_TEST(NMS_Learning2 "test_neural_network" "--NMS_Learning2")
ADD_TEST(NMS_Pyramid "test_neural_network" "--NMS_Pyramid")
ADD_TEST(NMS_Macros1 "test_neural_network" "--NMS_Macros1")
ADD_TEST(NMS_Macros2 "test_neural_network" "--NMS_Macros2")
ADD_TEST(NMS_Genetics "test_neural_network" "--NMS_Genetics" "--GeneticFilename" "Genetics/Ternary.txt")
ADD_TEST(NMS_Mutate "test_neural_network" "--NMS_Mutate" "--GeneticFilename" "Genetics/Ternary.txt")
ADD_TEST(M_NU_ConstDest "test_neural_network" "--M_NU_ConstDest")
ADD_TEST(M_NU_CopyConstDest "test_neural_network" "--M_NU_CopyConstDest")
ADD_TEST(M_NU_DimConstDest "test_neural_network" "--M_NU_DimConstDest")
ADD_TEST(M_NU_Rho "test_neural_network" "--M_NU_Rho")
ADD_TEST(M_NU_Sig "test_neural_network" "--M_NU_Sig")
ADD_TEST(M_NU_SetNext "test_neural_network" "--M_NU_SetNext")
ADD_TEST(M_NU_SetPrev "test_neural_network" "--M_NU_SetPrev")
ADD_TEST(M_NU_SetInput "test_neural_network" "--M_NU_SetInput")
ADD_TEST(M_NU_GetOutput "test_neural_network" "--M_NU_GetOutput")
ADD_TEST(M_NU_PutNeural "test_neural_network" "--M_NU_PutNeural")
ADD_TEST(M_NU_GetNeural "test_neural_network" "--M_NU_GetNeural")
ADD_TEST(M_NU_Propagate1 "test_neural_network" "--M_NU_Propagate1")
ADD_TEST(M_NU_Propagate2 "test_neural_network" "--M_NU_Propagate2")
ADD_TEST(M_NU_BackPropagate1 "test_neural_network" "--M_NU_BackPropagate1")
ADD_TEST(M_NU_BackPropagate2 "test_neural_network" "--M_NU_BackPropagate2")
ADD_TEST(M_NU_Error "test_neural_network" "--M_NU_Error")
ADD_TEST(M_NMS_ConstDest "test_neural_network" "--M_NMS_ConstDest")
ADD_TEST(M_NMS_CopyConstDest "test_neural_network" "--M_NMS_CopyConstDest")
ADD_TEST(M_NMS_DimConstDest "test_neural_network" "--M_NMS_DimConstDest")
ADD_TEST(M_NMS_PushBack "test_neural_network" "--M_NMS_PushBack")
ADD_TEST(M_NMS_SetRho1 "test_neural_network" "--M_NMS_SetRho1")
ADD_TEST(M_NMS_SetRho2 "test_neural_network" "--M_NMS_SetRho2")
ADD_TEST(M_NMS_SetSig1 "test_neural_network" "--M_NMS_SetSig1")
ADD_TEST(M_NMS_SetSig2 "test_neural_network" "--M_NMS_SetSig2")
ADD_TEST(M_NMS_PutNeural "test_neural_network" "--M_NMS_PutNeural")
ADD_TEST(M_NMS_Propagate "test_neural_network" "--M_NMS_Propagate")
ADD_TEST(M_NMS_BackPropagate1 "test_neural_network" "--M_NMS_BackPropagate1")
ADD_TEST(M_NMS_BackPropagate2 "test_neural_network" "--M_NMS_BackPropagate2")
ADD_TEST(M_NMS_Error "test_neural_network" "--M_NMS_Error")
ADD_TEST(SupervisedLearning1 "test_neural_network" "--SupervisedLearning1" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedXVal1 "test_neural_network" "--SupervisedXVal1" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedApply1 "test_neural_network" "--SupervisedApply1" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedError1 "test_neural_network" "--SupervisedError1" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedLearning1 "test_neural_network" "--UnsupervisedLearning1" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedXVal1 "test_neural_network" "--UnsupervisedXVal1" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedApply1 "test_neural_network" "--UnsupervisedApply1" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedLearning2 "test_neural_network" "--SupervisedLearning2" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedXVal2 "test_neural_network" "--SupervisedXVal2" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedApply2 "test_neural_network" "--SupervisedApply2" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedError2 "test_neural_network" "--SupervisedError2" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedLearning2 "test_neural_network" "--UnsupervisedLearning2" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedXVal2 "test_neural_network" "--UnsupervisedXVal2" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedApply2 "test_neural_network" "--UnsupervisedApply2" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedLearning3 "test_neural_network" "--SupervisedLearning3" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedXVal3 "test_neural_network" "--SupervisedXVal3" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedApply3 "test_neural_network" "--SupervisedApply3" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(SupervisedError3 "test_neural_network" "--SupervisedError3" "-I" "Data/training_in.csv" "-O" "Data/training_out.csv" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedLearning3 "test_neural_network" "--UnsupervisedLearning3" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedXVal3 "test_neural_network" "--UnsupervisedXVal3" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
ADD_TEST(UnsupervisedApply3 "test_neural_network" "--UnsupervisedApply3" "-I" "Data/training_in.csv" "-C" "clusters.dat" "-G" "Genetics/Binary.txt" "-B" "brains.dat")
